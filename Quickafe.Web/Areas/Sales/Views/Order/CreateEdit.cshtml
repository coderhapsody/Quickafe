@model Quickafe.Providers.Sales.ViewModels.Order.CreateEditViewModel
@{
    ViewBag.Title = "CreateEdit";
}

<div class="page-title">Order</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addEditForm", name = "addEditForm" }))
{
    @Html.HiddenFor(m => m.Id)
    @FormHelper.RenderAuditFields(Model)
    @Html.HiddenFor(m => m.LocationId)
    <div class="row">
        <div class="col-md-4">
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(m => m.OrderNo)</div>
                    <div class="col-md-7">
                        @Html.Kendo().TextBoxFor(m => m.OrderNo)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(m => m.Date)</div>
                    <div class="col-md-7">
                        @Html.Kendo().DatePickerFor(m => m.Date).Min(DateTime.Today.AddDays(-2)).Max(DateTime.Today)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(m => m.OrderType)</div>
                    <div class="col-md-7">
                        @(Html.Kendo().DropDownListFor(m => m.OrderType)
                                .DataSource(ds => ds.Read("GetOrderTypes", "Order", new { area = "Sales" }))
                                .OptionLabel("Select Order Type").Value(ViewBag.DefaultOrderType)
                        )
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(m => m.UnitPriceMode)</div>
                    <div class="col-md-7">
                        @(Html.Kendo().DropDownListFor(m => m.UnitPriceMode)
                                .DataSource(ds => ds.Read("GetPricingModes", "Order", new { area = "Sales" }))
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .OptionLabel("Select Pricing Mode")
                        )
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(m => m.TableId)</div>
                    <div class="col-md-7">
                        @(Html.Kendo().DropDownListFor(m => m.TableId)
                                .DataTextField("Code").DataValueField("Id")
                                .DataSource(ds => ds.Read("GetTables", "Order", new { area = "Sales", isUpdating = Model.Id > 0 }))                                
                                .OptionLabel("Select Table")
                        )
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(m => m.Guests)</div>
                    <div class="col-md-7">
                        @(Html.Kendo().NumericTextBoxFor(m => m.Guests)
                                .Decimals(0)
                                .Spinners(true)
                                .Step(1)
                                .Min(0)
                                .Format("0")
                        )
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(m => m.DeliveryCharge)</div>
                    <div class="col-md-7">
                        @(Html.Kendo().NumericTextBoxFor(m => m.DeliveryCharge)
                                .Decimals(0)
                                .Spinners(false)
                                .Min(0)
                                .Format("###,##0")
                        )
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(m => m.DiscPercent)</div>
                    <div class="col-md-7">
                        @(Html.Kendo().NumericTextBoxFor(m => m.DiscPercent)
                                .Decimals(2)
                                .Spinners(false)
                                .Min(0)
                                .HtmlAttributes(new { style="width:25%;" })
                        )
                        @(Html.Kendo().NumericTextBoxFor(m => m.DiscValue)
                                .Decimals(0)
                                .Spinners(false)
                                .Min(0)
                                .Format("###,##0")
                                .HtmlAttributes(new { style = "width:70%;" })

                        )
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">@Html.LabelFor(m => m.Notes)</div>
                    <div class="col-md-7">
                        @Html.Kendo().EditorFor(m => m.Notes).Tools(tools => tools.Clear()).HtmlAttributes(new { style="height:50px;" })                     
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-4"></div>
                    <div class="col-md-7">
                        <button type="submit" id="btnSave" name="btnSave" data-validateurl="@Url.Action("ValidateOrder")" class="k-button"><i class="fa fa-check"></i> @Strings.SaveButtonText</button>
                        <a href="@Url.Action("Index")" id="btnClose" name="btnClose" class="k-button"><i class="fa fa-undo"></i> @Strings.CancelButtonText</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <p>
                <a href="#" class="k-button k-button-icon" id="btnAddNew" data-createurl="@Url.Action("CreateDetail")"><span class="fa fa-plus"></span> Add New</a>
                <a href="#" class="k-button k-button-icon" id="btnDelete" data-deleteurl="@Url.Action("DeleteDetail")"><span class="fa fa-remove"></span> Delete</a>
            </p>
            @(Html.Kendo().Grid(Model.OrderDetails).Name("grid").HtmlAttributes(new { data_editurl = Url.Action("EditDetail") }).EnableCustomBinding(true).Columns(
                  col =>
                  {
                  col.Template(@<text></text>).ClientTemplate(@"<input type='checkbox' id='chkDelete' name='chkDelete' value='#=Uid#' />")
                          .Width(30).HtmlAttributes(new { style = "text-align:center;" });
                      col.Bound(m => m.ProductCode).Title("Product Code");
                      col.Bound(m => m.ProductName).Title("Product Name");
                      col.Bound(m => m.Qty).Title("Qty").HtmlAttributes(new { style = "text-align:right;" }).HeaderHtmlAttributes(new { style = "text-align:right;" });
                      col.Bound(m => m.UnitPrice).Title("Unit Price").Format("{0:###,##0}").HtmlAttributes(new { style = "text-align:right;" }).HeaderHtmlAttributes(new { style = "text-align:right;" });
                      col.Bound(m => m.DetailDiscPercent).Title("Disc. %").HtmlAttributes(new { style = "text-align:right;" }).HeaderHtmlAttributes(new { style = "text-align:right;" });
                      col.Bound(m => m.DetailDiscValue).HtmlAttributes(new { style = "text-align:right;" }).HeaderHtmlAttributes(new { style = "text-align:right;" });
                      col.Bound(m => m.Total).Format("{0:###,##0}").HtmlAttributes(new { style = "text-align:right;" }).HeaderHtmlAttributes(new { style = "text-align:right;" });
                      col.Bound(m => m.Notes).Width(0);
                      col.Template(@<text></text>).ClientTemplate("<a data-id='#=Uid#' href='javascript:;;' class='k-button k-button-icon editRow'><i class='fa fa-edit'></i></a>").Width(50).Title("");
                  })
                .Mobile()
                .Events(ev => ev.DataBound("OrderDetail.gridDataBound"))
                .DataSource(ds => ds.Ajax().Read("ListOrderDetail", "Order", new { area = "Sales" }))
                .Pageable(config => config.PageSizes(new[] { 1000 }))
                .Sortable(s => s.SortMode(GridSortMode.MultipleColumn))
            )
        </div>
    </div>
}

<div id="addEditWindow"></div>
<div id="windowBrowseProduct" data-browseurl="@Url.Action("BrowseProduct", "Browse", new { area = String.Empty, inventoryType="F", callback = "ProductId;ProductCode;ProductName;UnitPrice" })"></div>

@section scripts{
    <script src="~/Scripts/modules/sales/OrderDetail.js"></script>
}
