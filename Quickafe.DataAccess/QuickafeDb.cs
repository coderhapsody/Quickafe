

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
// 
// Do not make changes directly to this file - edit the template instead.
// 
// The following connection settings were used to generate this file:
//     Configuration file:     "Quickafe.DataAccess\App.config"
//     Connection String Name: "DefaultConnection"
//     Connection String:      "Data Source=localhost\sqlexpress;User ID=sa;password=**zapped**;;Initial Catalog=Quickafe"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Express Edition (64-bit)
// Database Engine Edition: Express

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Quickafe.DataAccess
{

    #region Unit of work

    public partial interface IQuickafeDbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<AutoNumber> AutoNumbers { get; set; } // AutoNumber
        System.Data.Entity.DbSet<Configuration> Configurations { get; set; } // Configuration
        System.Data.Entity.DbSet<Inventory> Inventories { get; set; } // Inventory
        System.Data.Entity.DbSet<InventoryDetail> InventoryDetails { get; set; } // InventoryDetail
        System.Data.Entity.DbSet<Location> Locations { get; set; } // Location
        System.Data.Entity.DbSet<Menu> Menus { get; set; } // Menu
        System.Data.Entity.DbSet<Order> Orders { get; set; } // Order
        System.Data.Entity.DbSet<OrderDetail> OrderDetails { get; set; } // OrderDetail
        System.Data.Entity.DbSet<Payment> Payments { get; set; } // Payment
        System.Data.Entity.DbSet<PaymentDetail> PaymentDetails { get; set; } // PaymentDetail
        System.Data.Entity.DbSet<PaymentType> PaymentTypes { get; set; } // PaymentType
        System.Data.Entity.DbSet<Product> Products { get; set; } // Product
        System.Data.Entity.DbSet<ProductCategory> ProductCategories { get; set; } // ProductCategory
        System.Data.Entity.DbSet<Role> Roles { get; set; } // Role
        System.Data.Entity.DbSet<Table> Tables { get; set; } // Table
        System.Data.Entity.DbSet<Uom> Uoms { get; set; } // Uom
        System.Data.Entity.DbSet<UserLogin> UserLogins { get; set; } // UserLogin
        System.Data.Entity.DbSet<VwStockCard> VwStockCards { get; set; } // Vw_StockCard

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class QuickafeDbContext : System.Data.Entity.DbContext, IQuickafeDbContext
    {
        public System.Data.Entity.DbSet<AutoNumber> AutoNumbers { get; set; } // AutoNumber
        public System.Data.Entity.DbSet<Configuration> Configurations { get; set; } // Configuration
        public System.Data.Entity.DbSet<Inventory> Inventories { get; set; } // Inventory
        public System.Data.Entity.DbSet<InventoryDetail> InventoryDetails { get; set; } // InventoryDetail
        public System.Data.Entity.DbSet<Location> Locations { get; set; } // Location
        public System.Data.Entity.DbSet<Menu> Menus { get; set; } // Menu
        public System.Data.Entity.DbSet<Order> Orders { get; set; } // Order
        public System.Data.Entity.DbSet<OrderDetail> OrderDetails { get; set; } // OrderDetail
        public System.Data.Entity.DbSet<Payment> Payments { get; set; } // Payment
        public System.Data.Entity.DbSet<PaymentDetail> PaymentDetails { get; set; } // PaymentDetail
        public System.Data.Entity.DbSet<PaymentType> PaymentTypes { get; set; } // PaymentType
        public System.Data.Entity.DbSet<Product> Products { get; set; } // Product
        public System.Data.Entity.DbSet<ProductCategory> ProductCategories { get; set; } // ProductCategory
        public System.Data.Entity.DbSet<Role> Roles { get; set; } // Role
        public System.Data.Entity.DbSet<Table> Tables { get; set; } // Table
        public System.Data.Entity.DbSet<Uom> Uoms { get; set; } // Uom
        public System.Data.Entity.DbSet<UserLogin> UserLogins { get; set; } // UserLogin
        public System.Data.Entity.DbSet<VwStockCard> VwStockCards { get; set; } // Vw_StockCard

        static QuickafeDbContext()
        {
            System.Data.Entity.Database.SetInitializer<QuickafeDbContext>(null);
        }

        public QuickafeDbContext()
            : base("Name=DefaultConnection")
        {
            InitializePartial();
        }

        public QuickafeDbContext(string connectionString)
            : base(connectionString)
        {
            InitializePartial();
        }

        public QuickafeDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
            InitializePartial();
        }

        public QuickafeDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
            InitializePartial();
        }

        public QuickafeDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AutoNumberConfiguration());
            modelBuilder.Configurations.Add(new ConfigurationConfiguration());
            modelBuilder.Configurations.Add(new InventoryConfiguration());
            modelBuilder.Configurations.Add(new InventoryDetailConfiguration());
            modelBuilder.Configurations.Add(new LocationConfiguration());
            modelBuilder.Configurations.Add(new MenuConfiguration());
            modelBuilder.Configurations.Add(new OrderConfiguration());
            modelBuilder.Configurations.Add(new OrderDetailConfiguration());
            modelBuilder.Configurations.Add(new PaymentConfiguration());
            modelBuilder.Configurations.Add(new PaymentDetailConfiguration());
            modelBuilder.Configurations.Add(new PaymentTypeConfiguration());
            modelBuilder.Configurations.Add(new ProductConfiguration());
            modelBuilder.Configurations.Add(new ProductCategoryConfiguration());
            modelBuilder.Configurations.Add(new RoleConfiguration());
            modelBuilder.Configurations.Add(new TableConfiguration());
            modelBuilder.Configurations.Add(new UomConfiguration());
            modelBuilder.Configurations.Add(new UserLoginConfiguration());
            modelBuilder.Configurations.Add(new VwStockCardConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AutoNumberConfiguration(schema));
            modelBuilder.Configurations.Add(new ConfigurationConfiguration(schema));
            modelBuilder.Configurations.Add(new InventoryConfiguration(schema));
            modelBuilder.Configurations.Add(new InventoryDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new LocationConfiguration(schema));
            modelBuilder.Configurations.Add(new MenuConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new PaymentConfiguration(schema));
            modelBuilder.Configurations.Add(new PaymentDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new PaymentTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ProductConfiguration(schema));
            modelBuilder.Configurations.Add(new ProductCategoryConfiguration(schema));
            modelBuilder.Configurations.Add(new RoleConfiguration(schema));
            modelBuilder.Configurations.Add(new TableConfiguration(schema));
            modelBuilder.Configurations.Add(new UomConfiguration(schema));
            modelBuilder.Configurations.Add(new UserLoginConfiguration(schema));
            modelBuilder.Configurations.Add(new VwStockCardConfiguration(schema));
            return modelBuilder;
        }

        partial void InitializePartial();
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
    #endregion

    #region POCO classes

    // AutoNumber
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class AutoNumber
    {
        public string ModuleCode { get; set; } // ModuleCode (Primary key) (length: 10)
        public int Year { get; set; } // Year (Primary key)
        public int Month { get; set; } // Month (Primary key)
        public long LastNumber { get; set; } // LastNumber

        public AutoNumber()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Configuration
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class Configuration
    {
        public string Key { get; set; } // Key (Primary key) (length: 50)
        public string Value { get; set; } // Value (length: 500)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 50)

        public Configuration()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Inventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class Inventory
    {
        public long Id { get; set; } // Id (Primary key)
        public long LocationId { get; set; } // LocationId
        public string InventoryNo { get; set; } // InventoryNo (length: 30)
        public string RefNo { get; set; } // RefNo (length: 30)
        public System.DateTime InventoryDate { get; set; } // InventoryDate
        public string InventoryType { get; set; } // InventoryType (length: 20)
        public string MutationType { get; set; } // MutationType (length: 20)
        public string Direction { get; set; } // Direction (length: 1)
        public string Notes { get; set; } // Notes (length: 2147483647)
        public System.DateTime? VoidWhen { get; set; } // VoidWhen
        public string VoidReason { get; set; } // VoidReason (length: 2147483647)
        public string VoidAuth { get; set; } // VoidAuth (length: 50)
        public System.DateTime? PostedWhen { get; set; } // PostedWhen
        public string PostedBy { get; set; } // PostedBy (length: 50)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<InventoryDetail> InventoryDetails { get; set; } // InventoryDetail.FK_InventoryDetail_Inventory

        // Foreign keys
        public virtual Location Location { get; set; } // FK_Inventory_Location

        public Inventory()
        {
            InventoryDetails = new System.Collections.Generic.List<InventoryDetail>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // InventoryDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class InventoryDetail
    {
        public long Id { get; set; } // Id (Primary key)
        public long InventoryId { get; set; } // InventoryId
        public long ProductId { get; set; } // ProductId
        public decimal Qty { get; set; } // Qty
        public long UomId { get; set; } // UOMId
        public string NotesDtl { get; set; } // NotesDtl (length: 2147483647)

        // Foreign keys
        public virtual Inventory Inventory { get; set; } // FK_InventoryDetail_Inventory
        public virtual Product Product { get; set; } // FK_InventoryDetail_Product
        public virtual Uom Uom { get; set; } // FK_InventoryDetail_Uom

        public InventoryDetail()
        {
            Qty = 0m;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Location
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class Location
    {
        public long Id { get; set; } // Id (Primary key)
        public string Code { get; set; } // Code (length: 10)
        public string Name { get; set; } // Name (length: 50)
        public string Address { get; set; } // Address (length: 200)
        public bool IsActive { get; set; } // IsActive
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)
        public byte[] RowVersion { get; private set; } // RowVersion (length: 8)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Inventory> Inventories { get; set; } // Inventory.FK_Inventory_Location
        public virtual System.Collections.Generic.ICollection<Order> Orders { get; set; } // Order.FK_Order_Location

        public Location()
        {
            Inventories = new System.Collections.Generic.List<Inventory>();
            Orders = new System.Collections.Generic.List<Order>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Menu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class Menu
    {
        public long Id { get; set; } // ID (Primary key)
        public string FaIcon { get; set; } // FAIcon (length: 50)
        public string Title { get; set; } // Title (length: 50)
        public string NavigationTo { get; set; } // NavigationTo (length: 200)
        public int Seq { get; set; } // Seq
        public long? ParentMenuId { get; set; } // ParentMenuID
        public bool IsActive { get; set; } // IsActive
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedWho { get; set; } // CreatedWho (length: 30)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedWho { get; set; } // ChangedWho (length: 30)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Menu> Menus { get; set; } // Menu.FK_Menu_ref_ParentMenu
        public virtual System.Collections.Generic.ICollection<Role> Roles { get; set; } // Many to many mapping

        // Foreign keys
        public virtual Menu ParentMenu { get; set; } // FK_Menu_ref_ParentMenu

        public Menu()
        {
            Seq = 0;
            IsActive = true;
            Menus = new System.Collections.Generic.List<Menu>();
            Roles = new System.Collections.Generic.List<Role>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Order
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class Order
    {
        public long Id { get; set; } // Id (Primary key)
        public long LocationId { get; set; } // LocationId
        public string OrderNo { get; set; } // OrderNo (length: 20)
        public string OrderType { get; set; } // OrderType (length: 20)
        public long TableId { get; set; } // TableId
        public System.DateTime Date { get; set; } // Date
        public int Guests { get; set; } // Guests
        public decimal DeliveryCharge { get; set; } // DeliveryCharge
        public decimal DiscPercent { get; set; } // DiscPercent
        public decimal DiscValue { get; set; } // DiscValue
        public decimal TaxAmount { get; set; } // TaxAmount
        public decimal ServiceCharge { get; set; } // ServiceCharge
        public string Notes { get; set; } // Notes (length: 2147483647)
        public System.DateTime? VoidWhen { get; set; } // VoidWhen
        public string VoidReason { get; set; } // VoidReason (length: 2147483647)
        public string VoidAuth { get; set; } // VoidAuth (length: 50)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)
        public byte[] RowVersion { get; private set; } // RowVersion (length: 8)
        public int UnitPriceMode { get; set; } // UnitPriceMode

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<OrderDetail> OrderDetails { get; set; } // OrderDetail.FK_OrderDetail_Order
        public virtual System.Collections.Generic.ICollection<Payment> Payments { get; set; } // Payment.FK_Payment_Order

        // Foreign keys
        public virtual Location Location { get; set; } // FK_Order_Location
        public virtual Table Table { get; set; } // FK_Order_Table

        public Order()
        {
            Guests = 0;
            DeliveryCharge = 0m;
            DiscPercent = 0m;
            DiscValue = 0m;
            TaxAmount = 0m;
            ServiceCharge = 0m;
            UnitPriceMode = 0;
            OrderDetails = new System.Collections.Generic.List<OrderDetail>();
            Payments = new System.Collections.Generic.List<Payment>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // OrderDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class OrderDetail
    {
        public System.Guid Uid { get; set; } // Uid (Primary key)
        public long OrderId { get; set; } // OrderId
        public long ProductId { get; set; } // ProductId
        public short Qty { get; set; } // Qty
        public decimal UnitPrice { get; set; } // UnitPrice
        public decimal DiscPercent { get; set; } // DiscPercent
        public decimal DiscValue { get; set; } // DiscValue
        public string Notes { get; set; } // Notes (length: 500)

        // Foreign keys
        public virtual Order Order { get; set; } // FK_OrderDetail_Order
        public virtual Product Product { get; set; } // FK_OrderDetail_Product

        public OrderDetail()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Payment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class Payment
    {
        public long Id { get; set; } // Id (Primary key)
        public string PaymentNo { get; set; } // PaymentNo (length: 20)
        public System.DateTime Date { get; set; } // Date
        public long OrderId { get; set; } // OrderId
        public decimal BilledAmount { get; set; } // BilledAmount
        public decimal PaidAmount { get; set; } // PaidAmount
        public System.DateTime? VoidWhen { get; set; } // VoidWhen
        public string VoidReason { get; set; } // VoidReason (length: 2147483647)
        public string VoidAuth { get; set; } // VoidAuth (length: 50)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<PaymentDetail> PaymentDetails { get; set; } // PaymentDetail.FK_PaymentDetail_Payment

        // Foreign keys
        public virtual Order Order { get; set; } // FK_Payment_Order

        public Payment()
        {
            PaymentDetails = new System.Collections.Generic.List<PaymentDetail>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PaymentDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class PaymentDetail
    {
        public long Id { get; set; } // Id (Primary key)
        public long PaymentId { get; set; } // PaymentId
        public long PaymentTypeId { get; set; } // PaymentTypeId
        public decimal Amount { get; set; } // Amount
        public string CardNo { get; set; } // CardNo (length: 50)
        public string Notes { get; set; } // Notes (length: 2147483647)

        // Foreign keys
        public virtual Payment Payment { get; set; } // FK_PaymentDetail_Payment
        public virtual PaymentType PaymentType { get; set; } // FK_PaymentDetail_PaymentType

        public PaymentDetail()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PaymentType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class PaymentType
    {
        public long Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public bool IsActive { get; set; } // IsActive
        public bool IsSystemDefault { get; set; } // IsSystemDefault
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)
        public byte[] RowVersion { get; private set; } // RowVersion (length: 8)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<PaymentDetail> PaymentDetails { get; set; } // PaymentDetail.FK_PaymentDetail_PaymentType

        public PaymentType()
        {
            IsSystemDefault = false;
            PaymentDetails = new System.Collections.Generic.List<PaymentDetail>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Product
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class Product
    {
        public long Id { get; set; } // Id (Primary key)
        public string Code { get; set; } // Code (length: 10)
        public string Name { get; set; } // Name (length: 50)
        public long ProductCategoryId { get; set; } // ProductCategoryId
        public decimal UnitPrice { get; set; } // UnitPrice
        public long? YieldProductId { get; set; } // YieldProductId
        public bool IsActive { get; set; } // IsActive
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)
        public byte[] RowVersion { get; private set; } // RowVersion (length: 8)
        public decimal UnitPrice2 { get; set; } // UnitPrice2
        public decimal UnitPrice3 { get; set; } // UnitPrice3

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<InventoryDetail> InventoryDetails { get; set; } // InventoryDetail.FK_InventoryDetail_Product
        public virtual System.Collections.Generic.ICollection<OrderDetail> OrderDetails { get; set; } // OrderDetail.FK_OrderDetail_Product
        public virtual System.Collections.Generic.ICollection<Product> Products { get; set; } // Product.FK_Product_YieldProduct

        // Foreign keys
        public virtual Product YieldProduct { get; set; } // FK_Product_YieldProduct
        public virtual ProductCategory ProductCategory { get; set; } // FK_Product_ProductCategory

        public Product()
        {
            UnitPrice2 = 0m;
            UnitPrice3 = 0m;
            InventoryDetails = new System.Collections.Generic.List<InventoryDetail>();
            OrderDetails = new System.Collections.Generic.List<OrderDetail>();
            Products = new System.Collections.Generic.List<Product>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ProductCategory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class ProductCategory
    {
        public long Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public bool CanOrder { get; set; } // CanOrder
        public bool IsActive { get; set; } // IsActive
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)
        public byte[] RowVersion { get; private set; } // RowVersion (length: 8)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Product> Products { get; set; } // Product.FK_Product_ProductCategory

        public ProductCategory()
        {
            Products = new System.Collections.Generic.List<Product>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Role
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class Role
    {
        public long Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 30)
        public bool IsSystemRole { get; set; } // IsSystemRole
        public bool IsActive { get; set; } // IsActive
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Menu> Menus { get; set; } // Many to many mapping
        public virtual System.Collections.Generic.ICollection<UserLogin> UserLogins { get; set; } // UserLogin.FK_UserLogin_Role

        public Role()
        {
            UserLogins = new System.Collections.Generic.List<UserLogin>();
            Menus = new System.Collections.Generic.List<Menu>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Table
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class Table
    {
        public long Id { get; set; } // Id (Primary key)
        public string Code { get; set; } // Code (length: 20)
        public bool IsActive { get; set; } // IsActive
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)
        public byte[] RowVersion { get; private set; } // RowVersion (length: 8)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Order> Orders { get; set; } // Order.FK_Order_Table

        public Table()
        {
            Orders = new System.Collections.Generic.List<Order>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Uom
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class Uom
    {
        public long Id { get; set; } // Id (Primary key)
        public string UomCode { get; set; } // UOMCode (length: 20)
        public string UomName { get; set; } // UOMName (length: 50)
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<InventoryDetail> InventoryDetails { get; set; } // InventoryDetail.FK_InventoryDetail_Uom

        public Uom()
        {
            InventoryDetails = new System.Collections.Generic.List<InventoryDetail>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // UserLogin
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class UserLogin
    {
        public long Id { get; set; } // Id (Primary key)
        public string UserName { get; set; } // UserName (length: 50)
        public string Password { get; set; } // Password (length: 200)
        public long RoleId { get; set; } // RoleId
        public System.DateTime? LastLogin { get; set; } // LastLogin
        public System.DateTime? LastChangePassword { get; set; } // LastChangePassword
        public bool AllowVoidOrder { get; set; } // AllowVoidOrder
        public bool AllowVoidPayment { get; set; } // AllowVoidPayment
        public bool AllowPrintReceipt { get; set; } // AllowPrintReceipt
        public bool IsSystemUser { get; set; } // IsSystemUser
        public bool IsActive { get; set; } // IsActive
        public System.DateTime CreatedWhen { get; set; } // CreatedWhen
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime ChangedWhen { get; set; } // ChangedWhen
        public string ChangedBy { get; set; } // ChangedBy (length: 50)

        // Foreign keys
        public virtual Role Role { get; set; } // FK_UserLogin_Role

        public UserLogin()
        {
            AllowVoidOrder = false;
            AllowVoidPayment = false;
            AllowPrintReceipt = false;
            IsSystemUser = false;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Vw_StockCard
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class VwStockCard
    {
        public System.DateTime InventoryDate { get; set; } // InventoryDate
        public string InventoryType { get; set; } // InventoryType (length: 19)
        public string MutationType { get; set; } // MutationType (length: 20)
        public long ProductId { get; set; } // ProductId
        public string ProductName { get; set; } // ProductName (length: 50)
        public decimal? InQty { get; set; } // InQty
        public decimal? OutQty { get; set; } // OutQty

        public VwStockCard()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    #endregion

    #region POCO Configuration

    // AutoNumber
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class AutoNumberConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AutoNumber>
    {
        public AutoNumberConfiguration()
            : this("dbo")
        {
        }

        public AutoNumberConfiguration(string schema)
        {
            ToTable(schema + ".AutoNumber");
            HasKey(x => new { x.ModuleCode, x.Year, x.Month });

            Property(x => x.ModuleCode).HasColumnName(@"ModuleCode").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(10).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Year).HasColumnName(@"Year").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Month).HasColumnName(@"Month").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LastNumber).HasColumnName(@"LastNumber").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Configuration
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class ConfigurationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Configuration>
    {
        public ConfigurationConfiguration()
            : this("dbo")
        {
        }

        public ConfigurationConfiguration(string schema)
        {
            ToTable(schema + ".Configuration");
            HasKey(x => x.Key);

            Property(x => x.Key).HasColumnName(@"Key").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Value).HasColumnName(@"Value").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(500);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Inventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class InventoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Inventory>
    {
        public InventoryConfiguration()
            : this("dbo")
        {
        }

        public InventoryConfiguration(string schema)
        {
            ToTable(schema + ".Inventory");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LocationId).HasColumnName(@"LocationId").IsRequired().HasColumnType("bigint");
            Property(x => x.InventoryNo).HasColumnName(@"InventoryNo").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(30);
            Property(x => x.RefNo).HasColumnName(@"RefNo").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(30);
            Property(x => x.InventoryDate).HasColumnName(@"InventoryDate").IsRequired().HasColumnType("date");
            Property(x => x.InventoryType).HasColumnName(@"InventoryType").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.MutationType).HasColumnName(@"MutationType").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.Direction).HasColumnName(@"Direction").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(1);
            Property(x => x.Notes).HasColumnName(@"Notes").IsOptional().IsUnicode(false).HasColumnType("text").HasMaxLength(2147483647);
            Property(x => x.VoidWhen).HasColumnName(@"VoidWhen").IsOptional().HasColumnType("datetime");
            Property(x => x.VoidReason).HasColumnName(@"VoidReason").IsOptional().IsUnicode(false).HasColumnType("text").HasMaxLength(2147483647);
            Property(x => x.VoidAuth).HasColumnName(@"VoidAuth").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.PostedWhen).HasColumnName(@"PostedWhen").IsOptional().HasColumnType("datetime");
            Property(x => x.PostedBy).HasColumnName(@"PostedBy").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);

            // Foreign keys
            HasRequired(a => a.Location).WithMany(b => b.Inventories).HasForeignKey(c => c.LocationId).WillCascadeOnDelete(false); // FK_Inventory_Location
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // InventoryDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class InventoryDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InventoryDetail>
    {
        public InventoryDetailConfiguration()
            : this("dbo")
        {
        }

        public InventoryDetailConfiguration(string schema)
        {
            ToTable(schema + ".InventoryDetail");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InventoryId).HasColumnName(@"InventoryId").IsRequired().HasColumnType("bigint");
            Property(x => x.ProductId).HasColumnName(@"ProductId").IsRequired().HasColumnType("bigint");
            Property(x => x.Qty).HasColumnName(@"Qty").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.UomId).HasColumnName(@"UOMId").IsRequired().HasColumnType("bigint");
            Property(x => x.NotesDtl).HasColumnName(@"NotesDtl").IsOptional().IsUnicode(false).HasColumnType("text").HasMaxLength(2147483647);

            // Foreign keys
            HasRequired(a => a.Inventory).WithMany(b => b.InventoryDetails).HasForeignKey(c => c.InventoryId).WillCascadeOnDelete(false); // FK_InventoryDetail_Inventory
            HasRequired(a => a.Product).WithMany(b => b.InventoryDetails).HasForeignKey(c => c.ProductId).WillCascadeOnDelete(false); // FK_InventoryDetail_Product
            HasRequired(a => a.Uom).WithMany(b => b.InventoryDetails).HasForeignKey(c => c.UomId).WillCascadeOnDelete(false); // FK_InventoryDetail_Uom
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Location
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class LocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Location>
    {
        public LocationConfiguration()
            : this("dbo")
        {
        }

        public LocationConfiguration(string schema)
        {
            ToTable(schema + ".Location");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"Code").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(10);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.Address).HasColumnName(@"Address").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(200);
            Property(x => x.IsActive).HasColumnName(@"IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.RowVersion).HasColumnName(@"RowVersion").IsRequired().IsFixedLength().HasColumnType("timestamp").HasMaxLength(8).IsRowVersion().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Menu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class MenuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Menu>
    {
        public MenuConfiguration()
            : this("dbo")
        {
        }

        public MenuConfiguration(string schema)
        {
            ToTable(schema + ".Menu");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FaIcon).HasColumnName(@"FAIcon").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.Title).HasColumnName(@"Title").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.NavigationTo).HasColumnName(@"NavigationTo").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(200);
            Property(x => x.Seq).HasColumnName(@"Seq").IsRequired().HasColumnType("int");
            Property(x => x.ParentMenuId).HasColumnName(@"ParentMenuID").IsOptional().HasColumnType("bigint");
            Property(x => x.IsActive).HasColumnName(@"IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedWho).HasColumnName(@"CreatedWho").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(30);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedWho).HasColumnName(@"ChangedWho").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(30);

            // Foreign keys
            HasOptional(a => a.ParentMenu).WithMany(b => b.Menus).HasForeignKey(c => c.ParentMenuId).WillCascadeOnDelete(false); // FK_Menu_ref_ParentMenu
            HasMany(t => t.Roles).WithMany(t => t.Menus).Map(m =>
            {
                m.ToTable("RoleMenu", "dbo");
                m.MapLeftKey("MenuID");
                m.MapRightKey("RoleID");
            });
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Order
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class OrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Order>
    {
        public OrderConfiguration()
            : this("dbo")
        {
        }

        public OrderConfiguration(string schema)
        {
            ToTable(schema + ".Order");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LocationId).HasColumnName(@"LocationId").IsRequired().HasColumnType("bigint");
            Property(x => x.OrderNo).HasColumnName(@"OrderNo").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.OrderType).HasColumnName(@"OrderType").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.TableId).HasColumnName(@"TableId").IsRequired().HasColumnType("bigint");
            Property(x => x.Date).HasColumnName(@"Date").IsRequired().HasColumnType("date");
            Property(x => x.Guests).HasColumnName(@"Guests").IsRequired().HasColumnType("int");
            Property(x => x.DeliveryCharge).HasColumnName(@"DeliveryCharge").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.DiscPercent).HasColumnName(@"DiscPercent").IsRequired().HasColumnType("decimal").HasPrecision(5,2);
            Property(x => x.DiscValue).HasColumnName(@"DiscValue").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.TaxAmount).HasColumnName(@"TaxAmount").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.ServiceCharge).HasColumnName(@"ServiceCharge").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.Notes).HasColumnName(@"Notes").IsOptional().IsUnicode(false).HasColumnType("text").HasMaxLength(2147483647);
            Property(x => x.VoidWhen).HasColumnName(@"VoidWhen").IsOptional().HasColumnType("datetime");
            Property(x => x.VoidReason).HasColumnName(@"VoidReason").IsOptional().IsUnicode(false).HasColumnType("text").HasMaxLength(2147483647);
            Property(x => x.VoidAuth).HasColumnName(@"VoidAuth").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.RowVersion).HasColumnName(@"RowVersion").IsRequired().IsFixedLength().HasColumnType("timestamp").HasMaxLength(8).IsRowVersion().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.UnitPriceMode).HasColumnName(@"UnitPriceMode").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.Location).WithMany(b => b.Orders).HasForeignKey(c => c.LocationId).WillCascadeOnDelete(false); // FK_Order_Location
            HasRequired(a => a.Table).WithMany(b => b.Orders).HasForeignKey(c => c.TableId).WillCascadeOnDelete(false); // FK_Order_Table
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // OrderDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class OrderDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderDetail>
    {
        public OrderDetailConfiguration()
            : this("dbo")
        {
        }

        public OrderDetailConfiguration(string schema)
        {
            ToTable(schema + ".OrderDetail");
            HasKey(x => x.Uid);

            Property(x => x.Uid).HasColumnName(@"Uid").IsRequired().HasColumnType("uniqueidentifier").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OrderId).HasColumnName(@"OrderId").IsRequired().HasColumnType("bigint");
            Property(x => x.ProductId).HasColumnName(@"ProductId").IsRequired().HasColumnType("bigint");
            Property(x => x.Qty).HasColumnName(@"Qty").IsRequired().HasColumnType("smallint");
            Property(x => x.UnitPrice).HasColumnName(@"UnitPrice").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.DiscPercent).HasColumnName(@"DiscPercent").IsRequired().HasColumnType("decimal").HasPrecision(5,2);
            Property(x => x.DiscValue).HasColumnName(@"DiscValue").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.Notes).HasColumnName(@"Notes").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(500);

            // Foreign keys
            HasRequired(a => a.Order).WithMany(b => b.OrderDetails).HasForeignKey(c => c.OrderId).WillCascadeOnDelete(false); // FK_OrderDetail_Order
            HasRequired(a => a.Product).WithMany(b => b.OrderDetails).HasForeignKey(c => c.ProductId).WillCascadeOnDelete(false); // FK_OrderDetail_Product
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Payment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class PaymentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Payment>
    {
        public PaymentConfiguration()
            : this("dbo")
        {
        }

        public PaymentConfiguration(string schema)
        {
            ToTable(schema + ".Payment");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PaymentNo).HasColumnName(@"PaymentNo").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.Date).HasColumnName(@"Date").IsRequired().HasColumnType("date");
            Property(x => x.OrderId).HasColumnName(@"OrderId").IsRequired().HasColumnType("bigint");
            Property(x => x.BilledAmount).HasColumnName(@"BilledAmount").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.PaidAmount).HasColumnName(@"PaidAmount").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.VoidWhen).HasColumnName(@"VoidWhen").IsOptional().HasColumnType("datetime");
            Property(x => x.VoidReason).HasColumnName(@"VoidReason").IsOptional().IsUnicode(false).HasColumnType("text").HasMaxLength(2147483647);
            Property(x => x.VoidAuth).HasColumnName(@"VoidAuth").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);

            // Foreign keys
            HasRequired(a => a.Order).WithMany(b => b.Payments).HasForeignKey(c => c.OrderId).WillCascadeOnDelete(false); // FK_Payment_Order
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PaymentDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class PaymentDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PaymentDetail>
    {
        public PaymentDetailConfiguration()
            : this("dbo")
        {
        }

        public PaymentDetailConfiguration(string schema)
        {
            ToTable(schema + ".PaymentDetail");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PaymentId).HasColumnName(@"PaymentId").IsRequired().HasColumnType("bigint");
            Property(x => x.PaymentTypeId).HasColumnName(@"PaymentTypeId").IsRequired().HasColumnType("bigint");
            Property(x => x.Amount).HasColumnName(@"Amount").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.CardNo).HasColumnName(@"CardNo").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.Notes).HasColumnName(@"Notes").IsOptional().IsUnicode(false).HasColumnType("text").HasMaxLength(2147483647);

            // Foreign keys
            HasRequired(a => a.Payment).WithMany(b => b.PaymentDetails).HasForeignKey(c => c.PaymentId).WillCascadeOnDelete(false); // FK_PaymentDetail_Payment
            HasRequired(a => a.PaymentType).WithMany(b => b.PaymentDetails).HasForeignKey(c => c.PaymentTypeId).WillCascadeOnDelete(false); // FK_PaymentDetail_PaymentType
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PaymentType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class PaymentTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PaymentType>
    {
        public PaymentTypeConfiguration()
            : this("dbo")
        {
        }

        public PaymentTypeConfiguration(string schema)
        {
            ToTable(schema + ".PaymentType");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.IsActive).HasColumnName(@"IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.IsSystemDefault).HasColumnName(@"IsSystemDefault").IsRequired().HasColumnType("bit");
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.RowVersion).HasColumnName(@"RowVersion").IsRequired().IsFixedLength().HasColumnType("timestamp").HasMaxLength(8).IsRowVersion().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Product
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class ProductConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Product>
    {
        public ProductConfiguration()
            : this("dbo")
        {
        }

        public ProductConfiguration(string schema)
        {
            ToTable(schema + ".Product");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"Code").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(10);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ProductCategoryId).HasColumnName(@"ProductCategoryId").IsRequired().HasColumnType("bigint");
            Property(x => x.UnitPrice).HasColumnName(@"UnitPrice").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.YieldProductId).HasColumnName(@"YieldProductId").IsOptional().HasColumnType("bigint");
            Property(x => x.IsActive).HasColumnName(@"IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.RowVersion).HasColumnName(@"RowVersion").IsRequired().IsFixedLength().HasColumnType("timestamp").HasMaxLength(8).IsRowVersion().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.UnitPrice2).HasColumnName(@"UnitPrice2").IsRequired().HasColumnType("decimal").HasPrecision(20,2);
            Property(x => x.UnitPrice3).HasColumnName(@"UnitPrice3").IsRequired().HasColumnType("decimal").HasPrecision(20,2);

            // Foreign keys
            HasOptional(a => a.YieldProduct).WithMany(b => b.Products).HasForeignKey(c => c.YieldProductId).WillCascadeOnDelete(false); // FK_Product_YieldProduct
            HasRequired(a => a.ProductCategory).WithMany(b => b.Products).HasForeignKey(c => c.ProductCategoryId).WillCascadeOnDelete(false); // FK_Product_ProductCategory
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProductCategory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class ProductCategoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProductCategory>
    {
        public ProductCategoryConfiguration()
            : this("dbo")
        {
        }

        public ProductCategoryConfiguration(string schema)
        {
            ToTable(schema + ".ProductCategory");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.CanOrder).HasColumnName(@"CanOrder").IsRequired().HasColumnType("bit");
            Property(x => x.IsActive).HasColumnName(@"IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.RowVersion).HasColumnName(@"RowVersion").IsRequired().IsFixedLength().HasColumnType("timestamp").HasMaxLength(8).IsRowVersion().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Role
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class RoleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Role>
    {
        public RoleConfiguration()
            : this("dbo")
        {
        }

        public RoleConfiguration(string schema)
        {
            ToTable(schema + ".Role");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(30);
            Property(x => x.IsSystemRole).HasColumnName(@"IsSystemRole").IsRequired().HasColumnType("bit");
            Property(x => x.IsActive).HasColumnName(@"IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Table
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class TableConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Table>
    {
        public TableConfiguration()
            : this("dbo")
        {
        }

        public TableConfiguration(string schema)
        {
            ToTable(schema + ".Table");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"Code").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.IsActive).HasColumnName(@"IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.RowVersion).HasColumnName(@"RowVersion").IsRequired().IsFixedLength().HasColumnType("timestamp").HasMaxLength(8).IsRowVersion().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Uom
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class UomConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Uom>
    {
        public UomConfiguration()
            : this("dbo")
        {
        }

        public UomConfiguration(string schema)
        {
            ToTable(schema + ".Uom");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UomCode).HasColumnName(@"UOMCode").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.UomName).HasColumnName(@"UOMName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // UserLogin
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class UserLoginConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserLogin>
    {
        public UserLoginConfiguration()
            : this("dbo")
        {
        }

        public UserLoginConfiguration(string schema)
        {
            ToTable(schema + ".UserLogin");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserName).HasColumnName(@"UserName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.Password).HasColumnName(@"Password").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(200);
            Property(x => x.RoleId).HasColumnName(@"RoleId").IsRequired().HasColumnType("bigint");
            Property(x => x.LastLogin).HasColumnName(@"LastLogin").IsOptional().HasColumnType("datetime");
            Property(x => x.LastChangePassword).HasColumnName(@"LastChangePassword").IsOptional().HasColumnType("datetime");
            Property(x => x.AllowVoidOrder).HasColumnName(@"AllowVoidOrder").IsRequired().HasColumnType("bit");
            Property(x => x.AllowVoidPayment).HasColumnName(@"AllowVoidPayment").IsRequired().HasColumnType("bit");
            Property(x => x.AllowPrintReceipt).HasColumnName(@"AllowPrintReceipt").IsRequired().HasColumnType("bit");
            Property(x => x.IsSystemUser).HasColumnName(@"IsSystemUser").IsRequired().HasColumnType("bit");
            Property(x => x.IsActive).HasColumnName(@"IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.CreatedWhen).HasColumnName(@"CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName(@"ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName(@"ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);

            // Foreign keys
            HasRequired(a => a.Role).WithMany(b => b.UserLogins).HasForeignKey(c => c.RoleId).WillCascadeOnDelete(false); // FK_UserLogin_Role
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Vw_StockCard
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class VwStockCardConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwStockCard>
    {
        public VwStockCardConfiguration()
            : this("dbo")
        {
        }

        public VwStockCardConfiguration(string schema)
        {
            ToTable(schema + ".Vw_StockCard");
            HasKey(x => new { x.InventoryDate, x.InventoryType, x.ProductId });

            Property(x => x.InventoryDate).HasColumnName(@"InventoryDate").IsRequired().HasColumnType("date");
            Property(x => x.InventoryType).HasColumnName(@"InventoryType").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(19);
            Property(x => x.MutationType).HasColumnName(@"MutationType").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.ProductId).HasColumnName(@"ProductId").IsRequired().HasColumnType("bigint");
            Property(x => x.ProductName).HasColumnName(@"ProductName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.InQty).HasColumnName(@"InQty").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.OutQty).HasColumnName(@"OutQty").IsOptional().HasColumnType("money").HasPrecision(19,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    #endregion

}
// </auto-generated>

